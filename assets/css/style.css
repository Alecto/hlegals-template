/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/* ul */
/* xl */
/* lg */
/* md */
/* sm */
/* xs */
/* xx */
/* ux */
.services__container, .experience__container, .page-header__grid {
  max-width: 1360px;
  margin-right: auto;
  margin-left: auto;
  padding-right: 20px;
  padding-left: 20px;
}

.services__title, .slider__header.active {
  background: linear-gradient(90deg, #ef8080 1%, #f0145a 100%);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-family: "TT Norms", sans-serif;
  font-size: 16px;
}

body {
  transition: transform 0.25s;
  line-height: 1.2;
}
body.active {
  overflow: hidden;
  transform: translateX(-170px);
}
body.active::before {
  position: absolute;
  z-index: 2;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  content: "";
  background-color: rgba(0, 0, 0, 0.5);
}

a {
  text-decoration: none;
  color: #ffffff;
}

@font-face {
  font-family: "TT Norms";
  font-weight: bold;
  font-style: normal;
  src: url("TTNorms-Bold.eot");
  src: local("TT Norms Bold"), local("TTNorms-Bold"), url("../fonts/TTNorms-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Bold.woff2") format("woff2"), url("../fonts/TTNorms-Bold.woff") format("woff"), url("../fonts/TTNorms-Bold.ttf") format("truetype");
}
@font-face {
  font-family: "TT Norms";
  font-weight: 500;
  font-style: normal;
  src: url("TTNorms-Medium.eot");
  src: local("TT Norms Medium"), local("TTNorms-Medium"), url("../fonts/TTNorms-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Medium.woff2") format("woff2"), url("../fonts/TTNorms-Medium.woff") format("woff"), url("../fonts/TTNorms-Medium.ttf") format("truetype");
}
@font-face {
  font-family: "TT Norms";
  font-weight: normal;
  font-style: normal;
  src: url("TTNorms-Regular.eot");
  src: local("TT Norms Regular"), local("TTNorms-Regular"), url("../fonts/TTNorms-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Regular.woff2") format("woff2"), url("../fonts/TTNorms-Regular.woff") format("woff"), url("../fonts/TTNorms-Regular.ttf") format("truetype");
}
.page-header {
  position: relative;
  background: linear-gradient(42deg, #323264 15%, #323264 50%, #7a425e 88%);
}
.page-header::after {
  z-index: 1;
  content: "";
  background: linear-gradient(to top, #323264 0%, transparent 100%);
  position: absolute;
  top: 70%;
  right: 0;
  bottom: 0;
  left: 0;
}
.page-header__grid {
  position: absolute;
  z-index: 2;
  top: 0;
  right: 0;
  left: 0;
  display: grid;
  gap: 20px;
  grid-template-columns: auto 1fr;
}
.page-header__logo {
  grid-area: logo;
}
.page-header__menu {
  grid-area: menu;
}
.page-header__actions {
  grid-area: actions;
}
.page-header__content {
  position: relative;
  z-index: 1;
  display: flex;
  overflow: hidden;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
}
.page-header__content-title {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  max-width: 620px;
  margin: 0;
  padding: 20px;
  transform: translate(-50%, -50%);
  text-align: center;
  color: #ffffff;
  font-size: 38px;
  font-weight: 500;
  line-height: 45px;
}
.page-header__button {
  position: absolute;
  z-index: 2;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  cursor: pointer;
}

.menu {
  align-self: center;
  font-size: 1.125rem;
}
.menu__btn {
  position: relative;
  width: 40px;
  height: 30px;
  margin-left: auto;
  cursor: pointer;
}
.menu__btn-row {
  position: absolute;
  left: 0;
  display: block;
  width: 100%;
  height: 5px;
  transition: 0.25s ease-in-out;
  transform: rotate(0deg);
  opacity: 1;
  border-radius: 5px;
  background-color: #ffffff;
}
.menu__btn-row:nth-of-type(1) {
  top: 0;
}
.menu__btn-row:nth-of-type(2) {
  top: 12px;
}
.menu__btn-row:nth-of-type(3) {
  top: 24px;
}
.menu__btn.active span:nth-of-type(1) {
  top: 12px;
  transform: rotate(135deg);
}
.menu__btn.active span:nth-of-type(2) {
  left: -40px;
  opacity: 0;
}
.menu__btn.active span:nth-of-type(3) {
  top: 12px;
  transform: rotate(-135deg);
}
.menu__list {
  margin: 0;
  padding: 0;
  list-style: none;
}
.menu__link {
  display: block;
}

.actions {
  display: flex;
  align-items: center;
  gap: 25px;
}
.actions__languages {
  display: flex;
  font-size: 12px;
  font-weight: 700;
  letter-spacing: 1px;
  gap: 2px;
}
.actions__language-link {
  display: block;
  padding: 6px 6px 5px 7px;
  border-radius: 8px;
}
.actions__language-link.active {
  background-color: #f0145a;
}
.actions__phone-link {
  white-space: nowrap;
  font-weight: 700;
}

.experience {
  background-color: #323264;
}
.slider {
  display: flex;
  color: #ffffff;
}
.slider__headers {
  position: relative;
  display: flex;
  flex-basis: 0;
  flex-direction: column;
  flex-grow: 2;
  gap: 20px;
}
.slider__header {
  position: relative;
  cursor: pointer;
  user-select: none;
  color: #b3b3ba;
  font-weight: 700;
}
.slider__notes {
  display: flex;
  align-items: center;
  flex-basis: 0;
  flex-grow: 3;
}
.slider__note {
  position: absolute;
  z-index: -9999;
  opacity: 0;
}
.slider__note.active {
  position: static;
  z-index: inherit;
  opacity: 1;
}
.slider__title {
  margin-bottom: 20px;
}
.slider__description {
  line-height: 1.45;
}
.slider__indicators {
  display: flex;
  justify-content: center;
  gap: 14px;
}
.slider__indicator {
  width: 16px;
  height: 16px;
  opacity: 0.2;
  border-radius: 8px;
  background-color: #24a3ff;
}
.slider__indicator.active {
  opacity: 1;
}

.services {
  position: relative;
  border-radius: 0 0 12px 12px;
  background: linear-gradient(220deg, #323264 12%, #323264 57%, #643E72 87%);
}
.services::before {
  position: absolute;
  top: 100%;
  right: 20px;
  left: 20px;
  height: 20px;
  content: "";
  border-radius: 0 0 12px 12px;
  background-color: #e6e6f0;
}
.services::after {
  position: absolute;
  top: 100%;
  right: 10px;
  left: 10px;
  height: 10px;
  content: "";
  border-radius: 0 0 12px 12px;
  background-color: #b3b3ba;
}
.services__page-link {
  letter-spacing: 1px;
  text-transform: uppercase;
  color: rgba(255, 255, 255, 0.5);
  font-size: 14px;
}
.services__grid {
  display: grid;
  gap: 40px;
}

.service-item {
  display: grid;
  gap: 10px;
  grid-template-rows: auto auto 1fr;
}
.service-item__title {
  align-self: center;
  color: #24a3ff;
  font-weight: 500;
}
.service-item__description {
  color: #ffffff;
  line-height: 1.44;
}
@media (min-width: 768px) {
  .page-header::before {
    content: "";
    background-image: url(../img/Frame2.svg);
    background-repeat: no-repeat;
    background-position: 50% 100%;
    background-size: 85vh;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
  .page-header__grid {
    padding-top: 50px;
    grid-template-areas: "logo actions" "logo menu";
  }
  .menu__btn {
    display: none;
  }
  .menu__list {
    gap: 15px;
    display: flex;
    align-items: center;
    justify-content: flex-end;
  }
  .actions {
    justify-content: flex-end;
  }
  .services__title {
    margin-bottom: 60px;
    font-size: 42px;
  }
  .service-item__image {
    width: 92px;
    height: 92px;
  }
  .service-item__title {
    font-size: 24px;
  }
  .service-item__description {
    font-size: 18px;
  }
}
@media (min-height: 801px) {
  .page-header__content-image {
    margin-top: 30vh;
  }
}
@media (min-width: 992px) {
  .experience {
    padding-top: 80px;
    padding-bottom: 80px;
  }
  .slider {
    gap: 80px;
  }
  .slider__headers::after {
    position: absolute;
    right: -42px;
    width: 4px;
    height: 100%;
    content: "";
    background-color: #e6e6f0;
  }
  .slider__header {
    text-align: right;
    font-size: 42px;
  }
  .slider__header.active::after {
    position: absolute;
    z-index: 2;
    right: -42px;
    width: 4px;
    height: 100%;
    content: "";
    background-color: #f0145a;
  }
  .slider__title {
    font-size: 32px;
  }
  .slider__description {
    font-size: 21px;
  }
  .slider__indicator {
    display: none;
  }
  .services__title {
    width: max-content;
  }
}
@media (min-width: 1280px) {
  .services {
    padding-bottom: 100px;
  }
  .services__grid {
    grid-template-columns: repeat(3, 1fr);
  }
}
@media (max-width: 1279.8px) {
  .service-item {
    grid-template-columns: auto 1fr;
  }
  .service-item__description {
    grid-column: 1/span 3;
  }
}
@media (max-width: 1279.8px) and (min-width: 768px) {
  .services {
    padding-bottom: 50px;
  }
  .services__grid {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (max-width: 991.8px) {
  .experience {
    padding-top: 40px;
    padding-bottom: 45px;
  }
  .slider {
    flex-direction: column;
    gap: 0;
  }
  .slider__header {
    display: none;
    width: min-content;
    margin-bottom: 10px;
    white-space: nowrap;
    letter-spacing: 1px;
    text-transform: uppercase;
    font-size: 14px;
  }
  .slider__header.active {
    display: block;
  }
  .slider__title {
    margin-bottom: 15px;
    font-size: 22px;
  }
  .slider__description {
    margin-bottom: 20px;
    font-size: 18px;
  }
}
@media (max-height: 800px) {
  .page-header__content-image {
    margin-top: calc(130px + 20vh);
  }
}
@media (max-width: 767.8px) {
  .page-header__grid {
    padding-top: 20px;
    grid-template-areas: "actions actions" "logo menu";
  }
  .menu__list {
    position: absolute;
    top: 0;
    right: -170px;
    display: none;
    width: 170px;
    height: 100vh;
    padding: 20px;
    background-color: #323264;
    box-shadow: -5px 0 5px rgba(0, 0, 0, 0.5);
  }
  .menu__list.active {
    display: block;
  }
  .menu__link {
    margin: 20px 0;
  }
  .actions {
    justify-content: space-between;
  }
  .actions a {
    color: #b3b3ba;
  }
  .actions__locations {
    display: none;
  }
  .actions__socials {
    display: none;
  }
  .services {
    padding-bottom: 20px;
  }
  .services__title {
    margin-bottom: 40px;
    font-size: 32px;
  }
  .service-item__image {
    width: 65px;
    height: 65px;
  }
  .service-item__title {
    font-size: 18px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */