/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/* ul */
/* xl */
/* lg */
/* md */
/* sm */
/* xs */
/* xx */
/* ux */
.experience__container, .page-header__grid, .page-header__content {
  max-width: 1360px;
  margin-right: auto;
  margin-left: auto;
  padding-right: 20px;
  padding-left: 20px;
}

.slider-sm__header, .slider-lg__indicator.active {
  background: linear-gradient(90.13deg, #ef8080 0.84%, #f0145a 99.96%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px;
}

body {
  font-family: "TT Norms", sans-serif;
}

a {
  text-decoration: none;
  color: #ffffff;
}

@font-face {
  font-family: "TT Norms";
  font-weight: bold;
  font-style: normal;
  src: url("TTNorms-Bold.eot");
  src: local("TT Norms Bold"), local("TTNorms-Bold"), url("../fonts/TTNorms-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Bold.woff2") format("woff2"), url("../fonts/TTNorms-Bold.woff") format("woff"), url("../fonts/TTNorms-Bold.ttf") format("truetype");
}
@font-face {
  font-family: "TT Norms";
  font-weight: 500;
  font-style: normal;
  src: url("TTNorms-Medium.eot");
  src: local("TT Norms Medium"), local("TTNorms-Medium"), url("../fonts/TTNorms-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Medium.woff2") format("woff2"), url("../fonts/TTNorms-Medium.woff") format("woff"), url("../fonts/TTNorms-Medium.ttf") format("truetype");
}
@font-face {
  font-family: "TT Norms";
  font-weight: normal;
  font-style: normal;
  src: url("TTNorms-Regular.eot");
  src: local("TT Norms Regular"), local("TTNorms-Regular"), url("../fonts/TTNorms-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Regular.woff2") format("woff2"), url("../fonts/TTNorms-Regular.woff") format("woff"), url("../fonts/TTNorms-Regular.ttf") format("truetype");
}
.page-header {
  position: relative;
  background: linear-gradient(42.01deg, #323264 14.33%, #323264 51.39%, #7a425e 87.53%);
}
.page-header::after {
  z-index: 1;
  content: "";
  background: linear-gradient(to top, #323264 0%, transparent 100%);
  position: absolute;
  top: 70%;
  right: 0;
  bottom: 0;
  left: 0;
}
.page-header__grid {
  position: absolute;
  z-index: 1;
  top: 0;
  right: 0;
  left: 0;
  display: grid;
  gap: 20px;
  grid-template-columns: auto 1fr;
}
.page-header__logo {
  grid-area: logo;
}
.page-header__content {
  position: relative;
  z-index: 1;
  display: flex;
  overflow: hidden;
  align-items: flex-end;
  justify-content: center;
  min-height: 100vh;
}
.page-header__content-image {
  margin-top: 200px;
}
.page-header__content-title {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  max-width: 620px;
  margin: 0;
  transform: translate(-50%, -50%);
  text-align: center;
  color: #ffffff;
  font-size: 38px;
  font-weight: 500;
  line-height: 45px;
}
.page-header__button {
  position: absolute;
  z-index: 2;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
}

.menu {
  align-self: center;
  font-size: 1.125rem;
  grid-area: menu;
}
.menu__btn {
  position: relative;
  width: 40px;
  height: 30px;
  margin-left: auto;
  cursor: pointer;
}
.menu__btn-row {
  position: absolute;
  left: 0;
  display: block;
  width: 100%;
  height: 5px;
  transition: 0.25s ease-in-out;
  transform: rotate(0deg);
  opacity: 1;
  border-radius: 5px;
  background-color: #ffffff;
}
.menu__btn-row:nth-of-type(1) {
  top: 0;
}
.menu__btn-row:nth-of-type(2) {
  top: 12px;
}
.menu__btn-row:nth-of-type(3) {
  top: 24px;
}
.menu__btn.active span:nth-of-type(1) {
  top: 12px;
  transform: rotate(135deg);
}
.menu__btn.active span:nth-of-type(2) {
  left: -40px;
  opacity: 0;
}
.menu__btn.active span:nth-of-type(3) {
  top: 12px;
  transform: rotate(-135deg);
}
.menu__list {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 15px;
  margin: 0;
  padding: 0;
  list-style: none;
}

.actions {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 25px;
  grid-area: actions;
}
.actions__languages {
  display: flex;
  font-size: 12px;
  font-weight: 700;
  line-height: 14px;
  gap: 2px;
}
.actions__languages-item {
  display: block;
  padding: 6px 7px 4px 5px;
  border-radius: 8px;
}
.actions__languages-item.active {
  color: #ffffff;
  background-color: #f0145a;
}
.actions__phone-url {
  white-space: nowrap;
  font-weight: 700;
}

.experience {
  background-color: #323264;
}
.slider-lg {
  display: flex;
  gap: 80px;
  color: #ffffff;
}
.slider-lg__indicators {
  display: flex;
  flex-direction: column;
  gap: 20px;
  flex-grow: 2;
  flex-basis: 0;
  position: relative;
}
.slider-lg__indicators::after {
  content: "";
  width: 4px;
  height: 100%;
  background-color: #e6e6f0;
  position: absolute;
  right: -42px;
}
.slider-lg__indicator {
  font-size: 42px;
  line-height: 50px;
  font-weight: 700;
  text-align: right;
  position: relative;
  color: #b3b3ba;
  cursor: pointer;
  user-select: none;
}
.slider-lg__indicator.active::after {
  content: "";
  width: 4px;
  height: 100%;
  background-color: #f0145a;
  position: absolute;
  right: -42px;
  z-index: 2;
}
.slider-lg__notes {
  flex-grow: 3;
  flex-basis: 0;
  display: flex;
  align-items: center;
}
.slider-lg__note {
  display: none;
}
.slider-lg__note.active {
  display: block;
}
.slider-lg__title {
  font-size: 32px;
  line-height: 1.2;
  margin-bottom: 20px;
}
.slider-lg__description {
  font-size: 21px;
  line-height: 1.43;
}

.slider-sm {
  color: #ffffff;
}
.slider-sm__note {
  display: flex;
  flex-direction: column;
}
.slider-sm__header {
  cursor: pointer;
  user-select: none;
  width: min-content;
  font-size: 14px;
  line-height: 1.2;
  letter-spacing: 1px;
  text-transform: uppercase;
  margin-bottom: 10px;
}
.slider-sm__title {
  margin-bottom: 15px;
  font-size: 22px;
  line-height: 1.2;
}
.slider-sm__description {
  font-size: 18px;
  line-height: 1.45;
  margin-bottom: 20px;
}
.slider-sm__indicators {
  display: flex;
  justify-content: center;
  gap: 14px;
}
.slider-sm__indicator {
  width: 16px;
  height: 16px;
  background-color: #24a3ff;
  opacity: 0.2;
  border-radius: 8px;
}
.slider-sm__indicator.active {
  opacity: 1;
}
@media (min-width: 768px) {
  .page-header::before {
    content: "";
    background-image: url(../img/Frame2.svg);
    background-repeat: no-repeat;
    background-position: 50% 100%;
    background-size: 85vh;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
  .page-header__grid {
    padding-top: 50px;
    grid-template-areas: "logo actions" "logo menu";
  }
  .menu__btn {
    display: none;
  }
}
@media (min-width: 992px) {
  .experience {
    padding-top: 80px;
    padding-bottom: 80px;
  }
  .slider-sm {
    display: none;
  }
}
@media (max-width: 991.8px) {
  .experience {
    padding-top: 40px;
    padding-bottom: 45px;
  }
  .slider-lg {
    display: none;
  }
}
@media (max-width: 767.8px) {
  .page-header__grid {
    padding-top: 20px;
    grid-template-areas: "actions actions" "logo menu";
  }
  .menu__list {
    display: none;
  }
  .actions {
    justify-content: space-between;
  }
  .actions a {
    color: #b3b3ba;
  }
  .actions__location {
    display: none;
  }
  .actions__socials {
    display: none;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */